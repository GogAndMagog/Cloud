#version: "2"

services:

  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_USER=$DB_USER
      - POSTGRES_PASSWORD=$DB_PASS
    ports:
      - "5434:5432"
    container_name: postgres
    healthcheck:
      test: ["CMD", "pg_isready", "-U", $DB_USER]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    container_name: redis
    command: --requirepass $REDIS_PASS
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
    environment:
      - MINIO_ROOT_USER=$MINIO_USER
      - MINIO_ROOT_PASSWORD=$MINIO_PASS
    volumes:
      - minio_data:/data
    command: server /data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      dockerfile: ./Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s       # как часто запускать проверку
      timeout: 10s        # таймаут одной проверки
      retries: 3          # сколько раз пробовать перед тем как признать контейнер unhealthy
      start_period: 20s   # время на "прогрев" приложения после старт

  frontend:
    image: s1iva/cloud-frontend
    ports:
      - "8081:80"
    depends_on:
      backend:
        condition: service_healthy

volumes:
  minio_data: